<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.cdlib.mrt</groupId>
  <artifactId>mrt-ingest-it</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>UC3-mrtIngestIT</name>
  <url>http://uc3.cdlib.org</url>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.cdlib.mrt</groupId>
        <artifactId>mrt-reflectoring-bom</artifactId>
        <version>1.0.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2/</url>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <itDockerRegistry>it-docker-registry</itDockerRegistry>
    <propertyDir>test</propertyDir>
    <docker.skip>${env.SKIP_DOCKER_TEST}</docker.skip>
    <skipTests>${env.SKIP_DOCKER_TEST}</skipTests>
  </properties>

  <profiles>
    <profile>
      <id>aws</id>
      <activation>
        <property>
          <name>env.AWS_ACCOUNT_ID</name>
        </property>
      </activation>
      <properties>
        <!-- Override only if necessary -->
        <itDockerRegistry>${env.AWS_ACCOUNT_ID}.dkr.ecr.${env.AWS_REGION}.amazonaws.com</itDockerRegistry>
      </properties>
    </profile>
  </profiles>

  <parent>
    <groupId>org.cdlib.mrt</groupId>
    <artifactId>mrt-parent-properties</artifactId>
    <version>1.0.0</version>
  </parent>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <compilerArgument>${compilerArgument}</compilerArgument>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.40.2</version>
        <executions>
          <execution>
            <id>prepare-it-server</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
              <volumes>
                <volume>
                  <name>ingest</name>
                </volume>
                <volume>
                  <name>queue</name>
                </volume>
              </volumes>
              <images>
                <image>
                  <name>${itDockerRegistry}/mock-merritt-it:dev</name>
                  <alias>mock-merritt-it</alias>
                  <run>
                    <network>
                      <name>network</name>
                      <alias>mock-merritt-it</alias>
                    </network>
                    <ports>
                      <port>mock-merritt-it.port:4567</port>
                    </ports>
                    <wait>
                      <time>1000</time>
                    </wait>
                    <volumes>
                      <bind>
                        <volume>queue:/tdr/ingest/queue</volume>
                      </bind>
                    </volumes>
                  </run>
                </image>
                <image>
                  <name>zookeeper:3.8.4</name>
                  <alias>zoo-it</alias>
                  <run>
                    <network>
                      <name>network</name>
                      <alias>zoo-it</alias>
                    </network>
                    <ports>
                      <port>mrt-zk.port:2181</port>
                    </ports>
                    <wait>
                      <time>2000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <name>${itDockerRegistry}/merritt-tomcat:dev</name>
                  <alias>it-server</alias>
                  <run>
                    <network>
                      <name>network</name>
                      <alias>it-server</alias>
                    </network>
                    <ports>
                      <port>it-server.port:8080</port>
                    </ports>
                    <wait>
                      <time>3000</time>
                    </wait>
                    <volumes>
                      <bind>
                        <volume>
                          ${project.basedir}/target/mrt-ingest-it-1.0-SNAPSHOT.war:/usr/local/tomcat/webapps/mrtingest.war</volume>
                        <volume>ingest:/tdr/ingest</volume>
                        <volume>queue:/tdr/ingest/queue</volume>
                        <volume>${project.basedir}/src/test/resources/profiles:/tdr/ingest/profiles</volume>
                      </bind>
                    </volumes>
                    <env>
                      <CATALINA_OPTS>-Dfile.encoding=UTF8 -Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true</CATALINA_OPTS>
                      <SSM_SKIP_RESOLUTION>Y</SSM_SKIP_RESOLUTION>
                    </env>
                  </run>
                </image>
                <image>
                  <name>${itDockerRegistry}/fakesmtp</name>
                  <alias>smtp</alias>
                  <run>
                    <network>
                      <name>network</name>
                      <alias>smtp</alias>
                    </network>
                  </run>
                </image>
              </images>
            </configuration>
          </execution>
          <execution>
            <id>remove-it-server</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.2</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>**/*IT</include>
          </includes>
          <environmentVariables>
            <it-server.port>${it-server.port}</it-server.port>
            <mock-merritt-it.port>${mock-merritt-it.port}</mock-merritt-it.port>
            <mrt-zk.port>${mrt-zk.port}</mrt-zk.port>
          </environmentVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <!-- Includes Test* and *Test by default -->
          <!-- skips surefire tests without skipping failsafe tests.
                     Property
          value seems to magically default to false -->
          <skipTests>${skip.surefire.tests}</skipTests>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>

    <dependency>
      <groupId>org.cdlib.mrt</groupId>
      <artifactId>mrt-ingestsrc</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- BOM uses version 4.4.14.  Can downgrade? -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <!-- <version>4.4.16</version> -->
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xmlParserAPIs</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.cdlib.mrt.zk</groupId>
      <artifactId>MerrittZK</artifactId>
      <version>1.0</version>
    </dependency>

  </dependencies>
</project>
